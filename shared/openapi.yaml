openapi: 3.0.3
info:
  title: Video Converter API
  description: API for managing video uploads, processing, and retrieval.
  version: 1.0.0
servers:
  - url: http://localhost:3000/dev
    description: Local running
  - url: https://{apiId}.execute-api.{region}.amazonaws.com/dev
    description: AWS API Gateway
    variables:
      apiId:
        default: your-api-id
      region:
        default: us-east-1
paths:
  /video:
    get:
      tags:
        - Video
      summary: List videos
      description: Retrieve a list of videos with their processing status and metadata.
      operationId: listVideos
      security:
        - cloud-burger-cognito: ["cloud-burger-video/list_videos"]
      parameters:
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
          description: Number of videos per page.
        - name: pageNumber
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
          description: Page number to retrieve.
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [UPLOADED, PROCESSING, PROCESSED, FAILED, WAITING_UPLOAD]
          description: Filter videos by status.
      responses:
        '200':
          description: A list of videos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoResponse'
        '400':
          description: Invalid request parameters.
        '500':
          description: Internal server error.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        passthroughBehavior: when_no_match
        uri: ${lambda_function_list_video}

  /video/url:
    get:
      tags:
        - Video
      summary: Get video upload URL
      description: Generate a signed URL for uploading a video.
      operationId: getVideoUrl
      security:
        - cloud-burger-cognito: ["cloud-burger-video/put_video_url"]
      responses:
        '200':
          description: A signed URL for video upload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoUrlResponse'
        '500':
          description: Internal server error.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        passthroughBehavior: when_no_match
        uri: ${lambda_function_put_video_url}

  /video/{id}/frame-url:
    get:
      tags:
        - Video
      summary: Get video frames URL
      description: Retrieve a signed URL for downloading the frames of a processed video.
      operationId: getVideoFramesUrl
      security:
        - cloud-burger-cognito: ["cloud-burger-video/get_video_frames_url"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the video.
      responses:
        '200':
          description: A signed URL for downloading video frames.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoFramesUrlResponse'
        '404':
          description: Video not found or frames not available.
        '400':
          description: Video frames not processed.
        '500':
          description: Internal server error.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        passthroughBehavior: when_no_match
        uri: ${lambda_function_get_video_frames_url}

components:
  schemas:
    VideoResponse:
      type: object
      properties:
        id:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
        status:
          type: string
          enum: [UPLOADED, PROCESSING, PROCESSED, FAILED, WAITING_UPLOAD]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GetVideoUrlResponse:
      type: object
      properties:
        url:
          type: string
    GetVideoFramesUrlResponse:
      type: object
      properties:
        url:
          type: string
  securitySchemes:
    cloud-burger-cognito:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: COGNITO_USER_POOLS
      x-amazon-apigateway-authorizer:
        type: COGNITO_USER_POOLS
        providerARNs:
          - ${provider_arn}