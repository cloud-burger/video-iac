name: "Terraform"

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        required: true
        type: choice
        description: Terraform Action
        options:
          - apply
          - destroy

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy_shared:
    name: "Deploy Shared"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.action == 'apply'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.10.2

      - name: Deploy Shared
        run: |
          cd shared
          terraform init && terraform apply -auto-approve


  deploy_notification:
    name: "Deploy Notification"
    runs-on: ubuntu-latest
    needs: deploy_shared
    if: github.event_name == 'push' || github.event.inputs.action == 'apply'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.10.2

      - name: Deploy Notification
        run: |
          cd apps/notification
          terraform init && terraform apply -auto-approve

  deploy_processor:
    name: "Deploy Processor"
    runs-on: ubuntu-latest
    needs: deploy_shared
    if: github.event_name == 'push' || github.event.inputs.action == 'apply'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.10.2

      - name: Deploy Processor
        run: |
          cd apps/processor
          terraform init && terraform apply -auto-approve

  deploy_upload:
    name: "Deploy Upload"
    runs-on: ubuntu-latest
    needs: deploy_shared
    if: github.event_name == 'push' || github.event.inputs.action == 'apply'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.10.2

      - name: Deploy Upload
        run: |
          cd apps/upload
          terraform init && terraform apply -auto-approve

  terraform_destroy_apps:
    name: "Destroy Apps"
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.10.2

      - name: Destroy Notification
        run: |
          cd apps/notification
          terraform init && terraform destroy -auto-approve

      - name: Destroy Processor
        run: |
          cd apps/processor
          terraform init && terraform destroy -auto-approve

      - name: Destroy Upload
        run: |
          cd apps/upload
          terraform init && terraform destroy -auto-approve

  terraform_destroy_shared:
    name: "Terraform Destroy Shared"
    runs-on: ubuntu-latest
    needs: terraform_destroy_apps
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.10.2

      - name: Destroy
        run: |
          cd shared
          terraform init && terraform destroy -auto-approve